// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  password String
}

model Teen {
  id Int @id @default(autoincrement())
  firstName String
  lastName String
  dateOfBirth DateTime
  gender Gender
  phoneNumber String?
  address String?
  parent Parent @relation(fields: parentId, references: [id])
  parentId Int @default(1)
  teamMemberships TeamMembership[]
}

model Parent {
  id Int @id @default(autoincrement())
  firstName String
  lastName String
  phoneNumber String? 
  teens Teen[]
}

model Season {
  id Int @id @default(autoincrement())
  name String
  teams Team[]
  meetings Meeting[]
  memberships TeamMembership[]
}

model Team {
  id Int @id @default(autoincrement())
  name String
  season Season @relation(fields: seasonId, references: [id])
  seasonId Int
  teamMemberships TeamMembership[]
  points PointRecord[]
}

model TeamMembership {
  id Int @id @default(autoincrement())
  teen Teen @relation(fields: teenId, references: [id])
  teenId Int
  team Team @relation(fields: teamId, references: [id])
  teamId Int
  season Season @relation(fields: seasonId, references: [id])
  seasonId Int
  attendances Attendance[]

  @@unique([teenId, seasonId])
}

model Meeting {
  id Int @id @default(autoincrement())
  date DateTime
  season Season @relation(fields: seasonId, references: [id])
  seasonId Int
  points PointRecord[]
  attendances Attendance[]
}

model PointRecord {
  id Int @id @default(autoincrement())
  points Int
  meeting Meeting @relation(fields: meetingId, references: [id])
  meetingId Int
  team Team @relation(fields: teamId, references: [id])
  teamId Int
  @@unique([meetingId, teamId])
}
model Attendance {
  id Int @id @default(autoincrement())
  meeting Meeting @relation(fields: meetingId, references: [id])
  meetingId Int
  teamMembership TeamMembership @relation(fields: teamMembershipId, references: [id])
  teamMembershipId Int
  present Boolean
}


enum Gender {
  M
  F
}